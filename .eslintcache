[{"D:\\React\\todo-app-staro\\src\\index.js":"1","D:\\React\\todo-app-staro\\src\\components\\App.js":"2","D:\\React\\todo-app-staro\\src\\components\\AllListsArea.jsx":"3","D:\\React\\todo-app-staro\\src\\components\\ListArea.jsx":"4"},{"size":243,"mtime":1610102757404,"results":"5","hashOfConfig":"6"},{"size":2901,"mtime":1615490978721,"results":"7","hashOfConfig":"6"},{"size":6714,"mtime":1615488399134,"results":"8","hashOfConfig":"6"},{"size":6310,"mtime":1615491908351,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"qxe2mx",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\todo-app-staro\\src\\index.js",[],["20","21"],"D:\\React\\todo-app-staro\\src\\components\\App.js",[],"D:\\React\\todo-app-staro\\src\\components\\AllListsArea.jsx",["22","23"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nfunction AllListsArea(props) {\n  const [lists, setLists] = useState([]);\n  const [listTitle, setListTitle] = useState('');\n  const [loading, setLoading] = useState(true);\n\n\n  const [editListUrl, setEditListUrl] = useState('');\n  // axios.defaults.baseURL = 'http://localhost:8080/';\n  axios.defaults.baseURL = 'https://shrouded-journey-60588.herokuapp.com/';\n\n  useEffect(() => {\n    //read lists\n    axios.get('/')\n      .then((response) => {\n        setLists(() => {\n          return [...response.data];\n        });\n\n        setLoading(false);\n      });\n  }, []);\n\n  function handleChange(e) {\n    props.setInputActive(true);\n    setListTitle(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    //create list \n    if (editListUrl === '' && listTitle !== '') {\n      axios.post(\n        '/lists',\n        {\n          title: listTitle\n        }\n      )\n        .then((response) => {\n          setLists(() => {\n            return [...response.data];\n          });\n          setListTitle('');\n          props.setClickedListTitle('');\n          props.setInputActive(false);\n        });\n    } else if (editListUrl !== '') {\n      //edit list\n      axios.patch('lists/' + editListUrl,\n        {\n          title: listTitle\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n        .then((response) => {\n          if (response.data !== 'Can not find list') {\n            setLists(() => {\n              return [...response.data];\n            });\n            setEditListUrl('');\n            setListTitle('');\n            props.setClickedListTitle('');\n            props.setInputActive(false);\n          }\n\n        });\n    }\n  }\n\n  function handleDeleteAllLists() {\n    //delete all lists\n    axios.delete('/lists')\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then((response) => {\n        setLists(() => {\n          return [...response.data];\n        });\n\n        props.setClickedListTitle('');\n        if (props.clickedListTitle === 'default list') {\n          props.setListItems([...response.data[0].items]);\n        }\n        setListTitle('');\n        setEditListUrl('');\n        props.setEditItemUrl('');\n        props.setItemTitle('');\n      });\n\n  }\n\n  function handleEditList(e) {\n    handleChange(e);\n    setEditListUrl(escape(e.target.name));\n  }\n\n  function handleDeleteList(e) {\n    let deleteUrl = escape(e.target.name);\n    if (deleteUrl !== '') {\n      axios.delete('lists/' + deleteUrl)\n        .catch(function (error) {\n          console.log(error);\n        })\n        .then((response) => {\n          setLists(() => {\n            return [...response.data];\n          });\n          props.setClickedListTitle('');\n          setListTitle('');\n          setEditListUrl('');\n          props.setItemTitle('');\n          props.setEditItemUrl('');\n        });\n    }\n  }\n\n  return <div className=\"mb-4\">\n\n    {loading ? <h2 className=\"d-inline-block mb-lg-4  text-secondary p-2 pl-4 pr-4 rounded\">Loading...</h2> :\n      <h2 className=\"d-inline-block mb-lg-4  text-secondary p-2 pl-4 pr-4 rounded\">All Lists</h2>}\n        \n          <ListGroup className=\"mb-3\">\n\n            {lists.map((list, index) => {\n              return <ListGroup.Item key={index}>\n\n\n                <Row className=\"d-xl-none \" style={{ marginBottom: list.title !== 'Default list' && '0.5rem' }}>\n                  <a href=\"#1\" onClick={props.handleListClick} name={list._id} className=\"title btn btn-outline-none\" style={{ textDecoration: 'underline', fontSize: '1.1rem' }}> {list.title} </a>\n                </Row>\n                <Row>\n                  <Col className=\"d-none d-xl-block\">\n                    <button onClick={props.handleListClick} name={list._id} className=\"title btn btn-outline-none\" style={{ textDecoration: 'underline', fontSize: '1.1rem' }}>{list.title}</button>\n                  </Col>\n\n                  <Col style={{ maxWidth: '10rem' }}>\n                    {props.inputActive ?\n                      <button className=\"w-100 btn btn-outline-primary\" name={list._id} value={list.title} onClick={handleEditList} disabled>edit</button> :\n                      <button className=\"w-100 btn btn-outline-primary\" name={list._id} value={list.title} onClick={handleEditList}>edit</button>}\n                  </Col>\n                  <Col style={{ maxWidth: '10rem' }}>\n                    {props.inputActive ?\n                      <button className=\"w-100 btn btn-outline-primary\" name={list._id} value={list.title} onClick={handleDeleteList} disabled>delete</button> :\n                      <button className=\"w-100 btn btn-outline-primary\" name={list._id} value={list.title} onClick={handleDeleteList} >delete</button>}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            })}\n          </ListGroup>\n        \n        \n          <form onSubmit={handleSubmit} className=\"mb-3 list-background rounded\" style={{ paddingRight: '1.3rem', padding: '1rem' }}>\n            <Row className=\"mb-2\">\n              <Col  >\n                <input style={{ border: '1.5px solid lightBlue', fontSize: '1.1rem' }} className=\"w-100 mb-2 p-2\" type=\"text\" onChange={handleChange} value={listTitle} placeholder=\"add new list\" />\n              </Col>\n              <Col className=\"d-none d-xl-block\" style={{ maxWidth: '10rem' }}>\n                <button className=\"w-100 btn btn-outline-primary w-100\" type=\"submit\">ok</button>\n              </Col>\n              <Col className=\"d-none d-xl-block\" style={{ maxWidth: '10rem' }}>\n                {props.inputActive ? <button className=\"w-100 btn btn-outline-primary\" onClick={handleDeleteAllLists} disabled> delete all</button> :\n                  <button className=\"w-100 btn btn-outline-primary\" onClick={handleDeleteAllLists}> delete all</button>}\n              </Col>\n            </Row>\n            <Row className=\"d-xl-none \">\n              <Col style={{ maxWidth: '10rem' }}>\n                <button className=\"w-100 btn btn-outline-primary\" type=\"submit\">ok</button>\n              </Col>\n              <Col style={{ maxWidth: '10rem' }} >\n                {props.inputActive ? <button className=\"w-100 btn btn-outline-primary\" onClick={handleDeleteAllLists} disabled> delete all</button> :\n                  <button className=\"w-100 btn btn-outline-primary\" onClick={handleDeleteAllLists}> delete all</button>}\n              </Col>\n            </Row>\n\n          </form>\n       \n    <a name=\"1\"></a>\n\n  </div>\n}\n\nexport default AllListsArea;","D:\\React\\todo-app-staro\\src\\components\\ListArea.jsx",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":184,"column":5,"nodeType":"30","endLine":184,"endColumn":17},{"ruleId":"31","severity":1,"message":"32","line":184,"column":5,"nodeType":"30","endLine":184,"endColumn":17},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]